{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pipes/currency.pipe.ts","webpack:///src/app/pipes/date.pipe.ts","webpack:///src/app/product/product/product.component.ts","webpack:///src/app/product/product/product.component.html","webpack:///src/app/services/product.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CurrencyPipe","value","parseInt","toFixed","name","DatePipe","args","seconds","Math","floor","Date","intervals","counter","i","returnDate","getFullYear","getMonth","getDate","pure","ProductComponent","productService","spinner","products","Array","page","limit","sort","show","getProduct","getProducts","subscribe","data","concat","hide","alert","param","getSortedProducts","index","p","event","target","offsetHeight","scrollTop","scrollHeight","scrollHandler","ProductService","httpClient","api","get","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-product></app-product>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductComponent } from './product/product/product.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { DatePipe } from './pipes/date.pipe';\nimport { CurrencyPipe } from './pipes/currency.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent,\n    DatePipe,\n    CurrencyPipe\n  ],\n  imports: [\n    NgxSpinnerModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currency'\n})\nexport class CurrencyPipe implements PipeTransform {\n\n  transform(value: any, ...args: unknown[]): unknown {\n    return \"$\" + (parseInt(value) / 100).toFixed(2);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'date',\n  pure: true\n})\nexport class DatePipe implements PipeTransform {\n \n  transform(value: any, args?: any): any {\n    if (value) {\n        const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n        if (seconds < 29)\n            return 'Just now';\n        const intervals = {\n            'year': 31536000,\n            'month': 2592000,\n            'week': 604800,\n            'day': 86400,\n            'hour': 3600,\n            'minute': 60,\n            'second': 1\n        };\n        let counter;\n        for (const i in intervals) {\n            counter = Math.floor(seconds / intervals[i]);\n            if(seconds > 604800){\n                var returnDate=new Date(value);\n                return returnDate.getFullYear()+\"-\"+(returnDate.getMonth()+1)+\"-\"+returnDate.getDate();\n            }\n            if (counter > 0){\n                if (counter === 1) {\n                    return counter + ' ' + i + ' ago';\n                } else {\n                    return counter + ' ' + i + 's ago';\n                }\n            }\n        }\n    }\n    return value;\n}\n\n}","import { Component, OnInit, HostListener } from '@angular/core';\nimport { ProductService } from \"../../services/product.service\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-product',\n  templateUrl: 'product.component.html',\n  styleUrls: ['product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor(private productService:ProductService, private spinner: NgxSpinnerService){}\n  \n  ngOnInit(): void {\n    this.spinner.show();\n    this.getProduct(this.page,this.limit);\n  }\n\n  products = new Array();\n  page:number = 1;\n  limit:number = 15;\n  sort:string = \"size\";\n  getProduct(page, limit){\n    page = this.page;\n    limit = this.limit;\n    this.productService.getProducts(page,limit,this.sort).subscribe(data => {\n      if(data){\n        this.products = this.products.concat(data);\n        this.spinner.hide();\n      }else{\n        this.spinner.hide();\n        alert(\"~ end of catalogue ~\");\n      }\n    });\n  }\n  getSortedProducts(param){\n    this.spinner.show();\n    this.page = 1;\n    this.sort = param;\n    this.productService.getSortedProducts(this.page,this.limit,param).subscribe(data => {\n      this.products = null;\n      this.products = data;\n      this.spinner.hide();\n    });\n  }\n\n  identify(index, p){\n    return p.id; \n  }\n  \n  @HostListener('scroll', ['$event'])\n  scrollHandler(event) {\n       if (event.target.offsetHeight + event.target.scrollTop >= (event.target.scrollHeight - 250)) {\n          this.page++;\n          this.getProduct(this.page,this.limit);\n      }\n  }\n\n}\n","<p>product catalogue!</p>\n<button (click)=\"getSortedProducts('price')\">Sort by price</button>\n<button (click)=\"getSortedProducts('size')\">Sort by size</button>\n<button (click)=\"getSortedProducts('id')\">Sort by id</button>\n\n<ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"large\" color = \"#b41010\" type = \"ball-scale\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n\n<table id=\"products\">\n    <tbody style=\"width: 100% !important;\" (scroll)=\"scrollHandler($event)\" >\n        <tr>\n            <th>ID</th>\n            <th>Size</th>\n            <th>Price</th>\n            <th>Face</th>\n            <th>Date</th>\n        </tr>\n      <tr *ngFor=\"let p of products; trackBy:identify;\">\n        <td>{{p.id}}</td>\n        <td>{{p.size}}</td>\n        <td>{{p.price | currency }}</td>\n        <td [ngStyle]=\"{'font-size':p.size +'px'}\">{{p.face}}</td>\n        <td>{{p.date | date:\"short\"}}</td>\n      </tr>\n    </tbody> \n  </table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProductService {\n  \n  api:any;\n  constructor(private httpClient: HttpClient) {\n    this.api = environment.api;\n  }\n\n  getProducts(page:number,limit:number,sort:string): Observable<any>{\n    return this.httpClient.get<any>(this.api+\"/products?_sort=\"+sort+\"&_page=\"+page+\"&_limit=\"+limit+\"\");\n  }\n\n  getSortedProducts(page:number,limit:number,param:any): Observable<any>{\n    return this.httpClient.get<any>(this.api+\"/products?_limit=\"+limit+\"&_sort=\"+param+\"\");\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api:\"http://localhost:3000\",\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}